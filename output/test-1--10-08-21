(pyshgp-ca) C:\>python H:\PushGP-CA-Image-Class-main\main.py -p 25 -g 5 -s 25 -c 10 -d 1,2
2021-08-10 11:58:25.550367: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'cudart64_110.dll'; dlerror: cudart64_110.dll not found
2021-08-10 11:58:25.550470: I tensorflow/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.
Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz
11493376/11490434 [==============================] - 1s 0us/step
Full MNIST loaded
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['float'], arity=1, push_config=PushConfig(collection_size_cap=1000, growth_cap=500, numeric_magnitude_limit=1000000000000.0, runtime_limit=10, step_limit=500))
evaluator: <mnist_estimator.CustomFunctionEvaluator object at 0x000002A5853D05E0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x000002A585380FD0>
population_size: 25
max_generations: 5
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 0
parallel_context: None
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x000002A5852B6A40>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x000002A5852B6EC0>
Instructions:
float_add, float_sub, float_mult, float_div, float_mod, float_min, float_max, float_inc, float_dec, float_sin, float_cos, float_tan, noop, noop_open, print_float, println_float, float_pop, float_dup, float_swap, float_rot, float_flush
Literals:
[Literal(value=1.0, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.1, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.2000000000000002, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.3000000000000003, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.4000000000000004, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.5000000000000004, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.6000000000000005, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.7000000000000006, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.8000000000000007, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.9000000000000008, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>)]
ERC Generators:
[<function mnist_pysh_ca.<locals>.<lambda> at 0x000002A58538CD30>]
========================================
Start Run
========================================

Generation: 1
Best Program: (1.8000000000000007 float_dup float_flush float_swap float_mult float_pop 1.5000000000000004 float_rot input_0 print_float float_rot 3 float_dec 4 float_mult float_sin float_sub input_0 float_mult 9 float_tan float_tan float_min 1.2000000000000002 print_float 1.5000000000000004 1 float_dec float_dup float_div 1.7000000000000006 float_min float_sub noop_open (5 float_cos float_rot 1.9000000000000008 1.3000000000000003 float_sin float_flush input_0 float_cos float_tan 8 noop_open (1.1 float_div 1.7000000000000006 1.9000000000000008 6 noop_open (input_0 input_0 float_rot 1.0 1.1 1.6000000000000005 1.3000000000000003 float_sub float_rot float_div noop_open (float_swap 1.5000000000000004 1.4000000000000004 1.8000000000000007) 1.4000000000000004 float_max float_div 1.8000000000000007 input_0 float_min 1 float_max noop 1.7000000000000006 1.2000000000000002 float_flush noop_open (float_sub noop_open (float_div noop_open (float_flush float_inc input_0 1.9000000000000008 1.0 float_max float_min)))))))
Best Error Vector: [0.74630082 0.35224319 0.28928566 0.3528434  0.74693859 0.75789797
 0.55153298 0.74457502 0.74923706 0.61869729 0.23329103 0.23329103
 2.         0.2335937  0.37102616 0.23329103 0.51774228 0.23329103
 0.23973346 0.23877823]
Best Total Error: 10.443589925765991

Generation: 2
Best Program: (1.8000000000000007 float_dup float_flush float_swap float_sub float_mult float_pop 1.5000000000000004 float_rot input_0 print_float float_rot 3 float_dec 4 float_mult float_sin float_add float_sub input_0 float_mult 9 float_dec float_tan float_tan float_mult float_min 1.2000000000000002 print_float 1.5000000000000004 1 float_dec float_dup float_div 1.7000000000000006 1.4000000000000004 float_sub noop_open (5 float_cos float_add 1.9000000000000008 1.3000000000000003 float_sin float_flush input_0 float_cos 8 1.1 float_div 1.7000000000000006 1.9000000000000008 6 noop_open (input_0 input_0 float_rot 1.0 1.6000000000000005 1.3000000000000003 float_sub float_rot float_div noop_open (float_swap 1.5000000000000004 1.4000000000000004 1.8000000000000007) 1.4000000000000004 9 float_max float_div 1.8000000000000007 input_0 float_min 1 float_max noop 1.7000000000000006 1.2000000000000002 float_flush noop_open (float_sub noop_open (float_div noop_open (float_flush float_inc float_add input_0 1.9000000000000008 1.0 float_max float_min))))))
Best Error Vector: [0.74630082 0.35224319 0.28928566 0.3528434  0.74693859 0.75789797
 0.55153298 0.74457502 0.74923706 0.61869729 0.23329103 0.23329103
 2.         0.2335937  0.37102616 0.23329103 0.51774228 0.23329103
 0.23973346 0.23877823]
Best Total Error: 10.443589925765991

Generation: 3
Best Program: (1.8000000000000007 float_dup float_flush float_mult float_pop 1.5000000000000004 float_rot float_flush float_rot print_float float_rot 3 float_dec 4 float_mult float_sin float_sub input_0 9 float_mult float_tan 8 float_min 1.2000000000000002 print_float 1.5000000000000004 1 float_dec float_dup float_swap float_div float_tan 1.7000000000000006 1.5000000000000004 float_sub noop_open (5 float_cos float_rot 1.7000000000000006 1.3000000000000003 float_sin float_tan float_flush float_cos float_tan 8 1.1 float_flush float_div 1.7000000000000006 1.9000000000000008 noop_open (input_0 float_min) input_0 float_rot 1.0 1.1 noop 1.6000000000000005 float_pop float_sub float_rot float_div 1.5000000000000004 1.4000000000000004 1.8000000000000007) 1.4000000000000004 float_mod float_max float_div 1.8000000000000007 input_0 1.7000000000000006 float_min 1 float_max 1.1 1.7000000000000006 1.2000000000000002 1.6000000000000005 float_sub noop_open (float_div noop_open (noop_open (float_tan float_flush float_dup input_0 1.9000000000000008 1.0 float_max float_min))))
Best Error Vector: [0.74630082 0.35224319 0.28928566 0.3528434  0.74693859 0.75789797
 0.55153298 0.74457502 0.74923706 0.61869729 0.23329103 0.23329103
 2.         0.2335937  0.37102616 0.23329103 0.51774228 0.23329103
 0.23973346 0.23877823]
Best Total Error: 10.443589925765991

Generation: 4
Best Program: (noop_open (1.8000000000000007 float_flush 1.1 float_swap float_mult float_pop 1.5000000000000004 float_rot float_sin input_0 print_float float_rot 3 float_dec 4) float_mult float_sin float_sub input_0 float_dup float_mult 9 float_tan 1.2000000000000002 print_float 1.1 1.5000000000000004 1 float_dec float_min float_dup float_div 1.1 1.7000000000000006 float_min println_float float_sub noop_open (float_inc 5 float_cos float_rot 1.3000000000000003 float_sin float_flush float_flush input_0 float_cos float_tan 8 noop 1.1 float_div 1.7000000000000006 1.9000000000000008 print_float noop_open (input_0 println_float 1.0 1.6000000000000005 1.3000000000000003 float_sub float_rot float_div float_pop noop_open (float_swap input_0 1.4000000000000004 1.8000000000000007 float_swap) 1.4000000000000004 float_div float_flush input_0 1 float_max noop 1.2000000000000002 float_flush float_sub noop_open (float_div noop_open (float_inc input_0 1.9000000000000008 1.0 float_max float_min)))))
Best Error Vector: [0.74630082 0.35224319 0.28928566 0.3528434  0.74693859 0.75789797
 0.55153298 0.74457502 0.74923706 0.61869729 0.23329103 0.23329103
 2.         0.2335937  0.37102616 0.23329103 0.51774228 0.23329103
 0.23973346 0.23877823]
Best Total Error: 10.443589925765991

Generation: 5
Best Program: (1.8000000000000007 float_dup 1.9000000000000008 float_mult float_pop 1.5000000000000004 float_rot float_sin float_flush float_rot 1.1 print_float float_rot 3 float_dec 4 float_mult 8 float_sin float_dec float_sub input_0 9 float_mult float_tan float_min println_float float_mod 1.2000000000000002 print_float 1.5000000000000004 1 float_dec float_dup float_swap 1.4000000000000004 float_div float_tan 1.7000000000000006 1.5000000000000004 input_0 noop_open (5 float_cos float_rot 1.7000000000000006 1.3000000000000003 9 float_sin float_flush float_cos float_cos float_tan 8 1.1 float_flush float_div 1.7000000000000006 float_mod 1.9000000000000008 noop_open (1.8000000000000007 input_0 input_0 float_rot 1.0 1.1 noop 1.6000000000000005 float_pop float_sub float_div 1.5000000000000004 1.4000000000000004 1.8000000000000007) float_mult 1.4000000000000004 float_mod float_max float_div float_mod 1.8000000000000007 input_0 1.7000000000000006 float_min 1 float_max 1.1 noop_open (1.7000000000000006 1.2000000000000002 1.4000000000000004 1.6000000000000005 float_sub noop_open (float_div 1.9000000000000008 float_tan float_div 1.1 float_flush float_dup input_0 1.9000000000000008 1.0 float_max float_min))))
Best Error Vector: [0.74630082 0.35224319 0.28928566 0.3528434  0.74693859 0.75789797
 0.55153298 0.74457502 0.74923706 0.61869729 0.23329103 0.23329103
 2.         0.2335937  0.37102616 0.23329103 0.51774228 0.23329103
 0.23973346 0.23877823]
Best Total Error: 10.443589925765991
Simplifying genome of length 93 with total error 10.443589925765991.
Simplified genome to length 93 and total error 10.443589925765991.
========================================
End Run
========================================
No solution found.
Best Seen Individual
        Genome:
         Genome([Literal(value=1.8000000000000007, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), InstructionMeta(name='float_dup', code_blocks=0), InstructionMeta(name='float_flush', code_blocks=0), InstructionMeta(name='float_swap', code_blocks=0), InstructionMeta(name='float_mult', code_blocks=0), InstructionMeta(name='float_pop', code_blocks=0), Literal(value=1.5000000000000004, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), InstructionMeta(name='float_rot', code_blocks=0), Input(input_index=0), InstructionMeta(name='print_float', code_blocks=0), InstructionMeta(name='float_rot', code_blocks=0), Literal(value=3, push_type=<pyshgp.push.types.PushIntType object at 0x000002A5852B2400>), InstructionMeta(name='float_dec', code_blocks=0), Literal(value=4, push_type=<pyshgp.push.types.PushIntType object at 0x000002A5852B2400>), InstructionMeta(name='float_mult', code_blocks=0), InstructionMeta(name='float_sin', code_blocks=0), InstructionMeta(name='float_sub', code_blocks=0), Input(input_index=0), InstructionMeta(name='float_mult', code_blocks=0), Literal(value=9, push_type=<pyshgp.push.types.PushIntType object at 0x000002A5852B2400>), InstructionMeta(name='float_tan', code_blocks=0), InstructionMeta(name='float_tan', code_blocks=0), InstructionMeta(name='float_min', code_blocks=0), Literal(value=1.2000000000000002, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), InstructionMeta(name='print_float', code_blocks=0), Literal(value=1.5000000000000004, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1, push_type=<pyshgp.push.types.PushIntType object at 0x000002A5852B2400>), InstructionMeta(name='float_dec', code_blocks=0), Closer(), InstructionMeta(name='float_dup', code_blocks=0), InstructionMeta(name='float_div', code_blocks=0), Literal(value=1.7000000000000006, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), InstructionMeta(name='float_min', code_blocks=0), InstructionMeta(name='float_sub', code_blocks=0), InstructionMeta(name='noop_open', code_blocks=1), Literal(value=5, push_type=<pyshgp.push.types.PushIntType object at 0x000002A5852B2400>), InstructionMeta(name='float_cos', code_blocks=0), InstructionMeta(name='float_rot', code_blocks=0), Literal(value=1.9000000000000008, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.3000000000000003, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), InstructionMeta(name='float_sin', code_blocks=0), InstructionMeta(name='float_flush', code_blocks=0), Input(input_index=0), InstructionMeta(name='float_cos', code_blocks=0), InstructionMeta(name='float_tan', code_blocks=0), Literal(value=8, push_type=<pyshgp.push.types.PushIntType object at 0x000002A5852B2400>), InstructionMeta(name='noop_open', code_blocks=1), Literal(value=1.1, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), InstructionMeta(name='float_div', code_blocks=0), Literal(value=1.7000000000000006, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.9000000000000008, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=6, push_type=<pyshgp.push.types.PushIntType object at 0x000002A5852B2400>), InstructionMeta(name='noop_open', code_blocks=1), Input(input_index=0), Input(input_index=0), InstructionMeta(name='float_rot', code_blocks=0), Literal(value=1.0, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.1, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.6000000000000005, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.3000000000000003, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), InstructionMeta(name='float_sub', code_blocks=0), InstructionMeta(name='float_rot', code_blocks=0), InstructionMeta(name='float_div', code_blocks=0), InstructionMeta(name='noop_open', code_blocks=1), InstructionMeta(name='float_swap', code_blocks=0), Literal(value=1.5000000000000004, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.4000000000000004, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.8000000000000007, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Closer(), Literal(value=1.4000000000000004, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), InstructionMeta(name='float_max', code_blocks=0), InstructionMeta(name='float_div', code_blocks=0), Literal(value=1.8000000000000007, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Input(input_index=0), InstructionMeta(name='float_min', code_blocks=0), Literal(value=1, push_type=<pyshgp.push.types.PushIntType object at 0x000002A5852B2400>), InstructionMeta(name='float_max', code_blocks=0), InstructionMeta(name='noop', code_blocks=0), Literal(value=1.7000000000000006, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.2000000000000002, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), InstructionMeta(name='float_flush', code_blocks=0), InstructionMeta(name='noop_open', code_blocks=1), InstructionMeta(name='float_sub', code_blocks=0), InstructionMeta(name='noop_open', code_blocks=1), InstructionMeta(name='float_div', code_blocks=0), InstructionMeta(name='noop_open', code_blocks=1), InstructionMeta(name='float_flush', code_blocks=0), InstructionMeta(name='float_inc', code_blocks=0), Input(input_index=0), Literal(value=1.9000000000000008, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), Literal(value=1.0, push_type=<pyshgp.push.types.PushFloatType object at 0x000002A5852B2340>), InstructionMeta(name='float_max', code_blocks=0), InstructionMeta(name='float_min', code_blocks=0)])
        Program:
         (1.8000000000000007 float_dup float_flush float_swap float_mult float_pop 1.5000000000000004 float_rot input_0 print_float float_rot 3 float_dec 4 float_mult float_sin float_sub input_0 float_mult 9 float_tan float_tan float_min 1.2000000000000002 print_float 1.5000000000000004 1 float_dec float_dup float_div 1.7000000000000006 float_min float_sub noop_open (5 float_cos float_rot 1.9000000000000008 1.3000000000000003 float_sin float_flush input_0 float_cos float_tan 8 noop_open (1.1 float_div 1.7000000000000006 1.9000000000000008 6 noop_open (input_0 input_0 float_rot 1.0 1.1 1.6000000000000005 1.3000000000000003 float_sub float_rot float_div noop_open (float_swap 1.5000000000000004 1.4000000000000004 1.8000000000000007) 1.4000000000000004 float_max float_div 1.8000000000000007 input_0 float_min 1 float_max noop 1.7000000000000006 1.2000000000000002 float_flush noop_open (float_sub noop_open (float_div noop_open (float_flush float_inc input_0 1.9000000000000008 1.0 float_max float_min)))))))
        Error vector:
         [0.74630082 0.35224319 0.28928566 0.3528434  0.74693859 0.75789797
 0.55153298 0.74457502 0.74923706 0.61869729 0.23329103 0.23329103
 2.         0.2335937  0.37102616 0.23329103 0.51774228 0.23329103
 0.23973346 0.23877823]
        Total error:
         10.443589925765991
Traceback (most recent call last):
  File "H:\PushGP-CA-Image-Class-main\main.py", line 176, in <module>
    mnist_pysh_ca(args.mode, args.filename, pop_size=args.pop_size, gens=args.gens, steps=args.steps, cut_size=args.cut_size, digits=digits)
  File "H:\PushGP-CA-Image-Class-main\main.py", line 99, in mnist_pysh_ca
    estimator.save(filepath)
  File "C:\Anaconda3\envs\pyshgp-ca\lib\site-packages\pyshgp\gp\estimators.py", line 209, in save
    self.solution.save(filepath)
  File "C:\Anaconda3\envs\pyshgp-ca\lib\site-packages\pyshgp\utils.py", line 84, in save
    with open(path, "wb") as f: